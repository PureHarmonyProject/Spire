// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

// This code has been modified and is maintained by the Soulsoft organization.
// The modifications to this file by Soulsoft are licensed under the MIT license.
package spire_net_http

public class HeaderNames
{
    // Use readonly statics rather than constants so ReferenceEquals works

    /// <summary>Gets the <c>Accept</c> HTTP header name.</summary>
    public static let Accept = "Accept"

    /// <summary>Gets the <c>Accept-Charset</c> HTTP header name.</summary>
    public static let AcceptCharset = "Accept-Charset"

    /// <summary>Gets the <c>Accept-Encoding</c> HTTP header name.</summary>
    public static let AcceptEncoding = "Accept-Encoding"

    /// <summary>Gets the <c>Accept-Language</c> HTTP header name.</summary>
    public static let AcceptLanguage = "Accept-Language"

    /// <summary>Gets the <c>Accept-Ranges</c> HTTP header name.</summary>
    public static let AcceptRanges = "Accept-Ranges"

    /// <summary>Gets the <c>Access-Control-Allow-Credentials</c> HTTP header name.</summary>
    public static let AccessControlAllowCredentials = "Access-Control-Allow-Credentials"

    /// <summary>Gets the <c>Access-Control-Allow-Headers</c> HTTP header name.</summary>
    public static let AccessControlAllowHeaders = "Access-Control-Allow-Headers"

    /// <summary>Gets the <c>Access-Control-Allow-Methods</c> HTTP header name.</summary>
    public static let AccessControlAllowMethods = "Access-Control-Allow-Methods"

    /// <summary>Gets the <c>Access-Control-Allow-Origin</c> HTTP header name.</summary>
    public static let AccessControlAllowOrigin = "Access-Control-Allow-Origin"

    /// <summary>Gets the <c>Access-Control-Expose-Headers</c> HTTP header name.</summary>
    public static let AccessControlExposeHeaders = "Access-Control-Expose-Headers"

    /// <summary>Gets the <c>Access-Control-Max-Age</c> HTTP header name.</summary>
    public static let AccessControlMaxAge = "Access-Control-Max-Age"

    /// <summary>Gets the <c>Access-Control-Request-Headers</c> HTTP header name.</summary>
    public static let AccessControlRequestHeaders = "Access-Control-Request-Headers"

    /// <summary>Gets the <c>Access-Control-Request-Method</c> HTTP header name.</summary>
    public static let AccessControlRequestMethod = "Access-Control-Request-Method"

    /// <summary>Gets the <c>Age</c> HTTP header name.</summary>
    public static let Age = "Age"

    /// <summary>Gets the <c>Allow</c> HTTP header name.</summary>
    public static let Allow = "Allow"

    /// <summary>Gets the <c>Alt-Svc</c> HTTP header name.</summary>
    public static let AltSvc = "Alt-Svc"

    /// <summary>Gets the <c>:authority</c> HTTP header name.</summary>
    public static let Authority = ":authority"

    /// <summary>Gets the <c>Authorization</c> HTTP header name.</summary>
    public static let Authorization = "Authorization"

    /// <summary>Gets the <c>baggage</c> HTTP header name.</summary>
    public static let Baggage = "baggage"

    /// <summary>Gets the <c>Cache-Control</c> HTTP header name.</summary>
    public static let CacheControl = "Cache-Control"

    /// <summary>Gets the <c>Connection</c> HTTP header name.</summary>
    public static let Connection = "Connection"

    /// <summary>Gets the <c>Content-Disposition</c> HTTP header name.</summary>
    public static let ContentDisposition = "Content-Disposition"

    /// <summary>Gets the <c>Content-Encoding</c> HTTP header name.</summary>
    public static let ContentEncoding = "Content-Encoding"

    /// <summary>Gets the <c>Content-Language</c> HTTP header name.</summary>
    public static let ContentLanguage = "Content-Language"

    /// <summary>Gets the <c>Content-Length</c> HTTP header name.</summary>
    public static let ContentLength = "Content-Length"

    /// <summary>Gets the <c>Content-Location</c> HTTP header name.</summary>
    public static let ContentLocation = "Content-Location"

    /// <summary>Gets the <c>Content-MD5</c> HTTP header name.</summary>
    public static let ContentMD5 = "Content-MD5"

    /// <summary>Gets the <c>Content-Range</c> HTTP header name.</summary>
    public static let ContentRange = "Content-Range"

    /// <summary>Gets the <c>Content-Security-Policy</c> HTTP header name.</summary>
    public static let ContentSecurityPolicy = "Content-Security-Policy"

    /// <summary>Gets the <c>Content-Security-Policy-Report-Only</c> HTTP header name.</summary>
    public static let ContentSecurityPolicyReportOnly = "Content-Security-Policy-Report-Only"

    /// <summary>Gets the <c>Content-Type</c> HTTP header name.</summary>
    public static let ContentType = "Content-Type"

    /// <summary>Gets the <c>Correlation-Context</c> HTTP header name.</summary>
    public static let CorrelationContext = "Correlation-Context"

    /// <summary>Gets the <c>Cookie</c> HTTP header name.</summary>
    public static let Cookie = "Cookie"

    /// <summary>Gets the <c>Date</c> HTTP header name.</summary>
    public static let Date = "Date"

    /// <summary>Gets the <c>DNT</c> HTTP header name.</summary>
    public static let DNT = "DNT"

    /// <summary>Gets the <c>ETag</c> HTTP header name.</summary>
    public static let ETag = "ETag"

    /// <summary>Gets the <c>Expires</c> HTTP header name.</summary>
    public static let Expires = "Expires"

    /// <summary>Gets the <c>Expect</c> HTTP header name.</summary>
    public static let Expect = "Expect"

    /// <summary>Gets the <c>From</c> HTTP header name.</summary>
    public static let From = "From"

    /// <summary>Gets the <c>Grpc-Accept-Encoding</c> HTTP header name.</summary>
    public static let GrpcAcceptEncoding = "Grpc-Accept-Encoding"

    /// <summary>Gets the <c>Grpc-Encoding</c> HTTP header name.</summary>
    public static let GrpcEncoding = "Grpc-Encoding"

    /// <summary>Gets the <c>Grpc-Message</c> HTTP header name.</summary>
    public static let GrpcMessage = "Grpc-Message"

    /// <summary>Gets the <c>Grpc-Status</c> HTTP header name.</summary>
    public static let GrpcStatus = "Grpc-Status"

    /// <summary>Gets the <c>Grpc-Timeout</c> HTTP header name.</summary>
    public static let GrpcTimeout = "Grpc-Timeout"

    /// <summary>Gets the <c>Host</c> HTTP header name.</summary>
    public static let Host = "Host"

    /// <summary>Gets the <c>Keep-Alive</c> HTTP header name.</summary>
    public static let KeepAlive = "Keep-Alive"

    /// <summary>Gets the <c>If-Match</c> HTTP header name.</summary>
    public static let IfMatch = "If-Match"

    /// <summary>Gets the <c>If-Modified-Since</c> HTTP header name.</summary>
    public static let IfModifiedSince = "If-Modified-Since"

    /// <summary>Gets the <c>If-None-Match</c> HTTP header name.</summary>
    public static let IfNoneMatch = "If-None-Match"

    /// <summary>Gets the <c>If-Range</c> HTTP header name.</summary>
    public static let IfRange = "If-Range"

    /// <summary>Gets the <c>If-Unmodified-Since</c> HTTP header name.</summary>
    public static let IfUnmodifiedSince = "If-Unmodified-Since"

    /// <summary>Gets the <c>Last-Modified</c> HTTP header name.</summary>
    public static let LastModified = "Last-Modified"

    /// <summary>Gets the <c>Link</c> HTTP header name.</summary>
    public static let Link = "Link"

    /// <summary>Gets the <c>Location</c> HTTP header name.</summary>
    public static let Location = "Location"

    /// <summary>Gets the <c>Max-Forwards</c> HTTP header name.</summary>
    public static let MaxForwards = "Max-Forwards"

    /// <summary>Gets the <c>:method</c> HTTP header name.</summary>
    public static let Method = ":method"

    /// <summary>Gets the <c>Origin</c> HTTP header name.</summary>
    public static let Origin = "Origin"

    /// <summary>Gets the <c>:path</c> HTTP header name.</summary>
    public static let Path = ":path"

    /// <summary>Gets the <c>Pragma</c> HTTP header name.</summary>
    public static let Pragma = "Pragma"

    /// <summary>Gets the <c>Proxy-Authenticate</c> HTTP header name.</summary>
    public static let ProxyAuthenticate = "Proxy-Authenticate"

    /// <summary>Gets the <c>Proxy-Authorization</c> HTTP header name.</summary>
    public static let ProxyAuthorization = "Proxy-Authorization"

    /// <summary>Gets the <c>Proxy-Connection</c> HTTP header name.</summary>
    public static let ProxyConnection = "Proxy-Connection"

    /// <summary>Gets the <c>Range</c> HTTP header name.</summary>
    public static let Range = "Range"

    /// <summary>Gets the <c>Referer</c> HTTP header name.</summary>
    public static let Referer = "Referer"

    /// <summary>Gets the <c>Retry-After</c> HTTP header name.</summary>
    public static let RetryAfter = "Retry-After"

    /// <summary>Gets the <c>Request-Id</c> HTTP header name.</summary>
    public static let RequestId = "Request-Id"

    /// <summary>Gets the <c>:scheme</c> HTTP header name.</summary>
    public static let Scheme = ":scheme"

    /// <summary>Gets the <c>Sec-WebSocket-Accept</c> HTTP header name.</summary>
    public static let SecWebSocketAccept = "Sec-WebSocket-Accept"

    /// <summary>Gets the <c>Sec-WebSocket-Key</c> HTTP header name.</summary>
    public static let SecWebSocketKey = "Sec-WebSocket-Key"

    /// <summary>Gets the <c>Sec-WebSocket-Protocol</c> HTTP header name.</summary>
    public static let SecWebSocketProtocol = "Sec-WebSocket-Protocol"

    /// <summary>Gets the <c>Sec-WebSocket-Version</c> HTTP header name.</summary>
    public static let SecWebSocketVersion = "Sec-WebSocket-Version"

    /// <summary>Gets the <c>Sec-WebSocket-Extensions</c> HTTP header name.</summary>
    public static let SecWebSocketExtensions = "Sec-WebSocket-Extensions"

    /// <summary>Gets the <c>Server</c> HTTP header name.</summary>
    public static let Server = "Server"

    /// <summary>Gets the <c>Set-Cookie</c> HTTP header name.</summary>
    public static let SetCookie = "Set-Cookie"

    /// <summary>Gets the <c>:status</c> HTTP header name.</summary>
    public static let Status = ":status"

    /// <summary>Gets the <c>Strict-Transport-Security</c> HTTP header name.</summary>
    public static let StrictTransportSecurity = "Strict-Transport-Security"

    /// <summary>Gets the <c>TE</c> HTTP header name.</summary>
    public static let TE = "TE"

    /// <summary>Gets the <c>Trailer</c> HTTP header name.</summary>
    public static let Trailer = "Trailer"

    /// <summary>Gets the <c>Transfer-Encoding</c> HTTP header name.</summary>
    public static let TransferEncoding = "Transfer-Encoding"

    /// <summary>Gets the <c>Translate</c> HTTP header name.</summary>
    public static let Translate = "Translate"

    /// <summary>Gets the <c>traceparent</c> HTTP header name.</summary>
    public static let TraceParent = "traceparent"

    /// <summary>Gets the <c>tracestate</c> HTTP header name.</summary>
    public static let TraceState = "tracestate"

    /// <summary>Gets the <c>Upgrade</c> HTTP header name.</summary>
    public static let Upgrade = "Upgrade"

    /// <summary>Gets the <c>Upgrade-Insecure-Requests</c> HTTP header name.</summary>
    public static let UpgradeInsecureRequests = "Upgrade-Insecure-Requests"

    /// <summary>Gets the <c>User-Agent</c> HTTP header name.</summary>
    public static let UserAgent = "User-Agent"

    /// <summary>Gets the <c>Vary</c> HTTP header name.</summary>
    public static let Vary = "Vary"

    /// <summary>Gets the <c>Via</c> HTTP header name.</summary>
    public static let Via = "Via"

    /// <summary>Gets the <c>Warning</c> HTTP header name.</summary>
    public static let Warning = "Warning"

    /// <summary>Gets the <c>Sec-WebSocket-Protocol</c> HTTP header name.</summary>
    public static let WebSocketSubProtocols = "Sec-WebSocket-Protocol"

    /// <summary>Gets the <c>WWW-Authenticate</c> HTTP header name.</summary>
    public static let WWWAuthenticate = "WWW-Authenticate"

    /// <summary>Gets the <c>X-Content-Type-Options</c> HTTP header name.</summary>
    public static let XContentTypeOptions = "X-Content-Type-Options"

    /// <summary>Gets the <c>X-Frame-Options</c> HTTP header name.</summary>
    public static let XFrameOptions = "X-Frame-Options"

    /// <summary>Gets the <c>X-Powered-By</c> HTTP header name.</summary>
    public static let XPoweredBy = "X-Powered-By"

    /// <summary>Gets the <c>X-Requested-With</c> HTTP header name.</summary>
    public static let XRequestedWith = "X-Requested-With"

    /// <summary>Gets the <c>X-UA-Compatible</c> HTTP header name.</summary>
    public static let XUACompatible = "X-UA-Compatible"

    /// <summary>Gets the <c>X-XSS-Protection</c> HTTP header name.</summary>
    public static let XXSSProtection = "X-XSS-Protection"
}